name: on_milestone_create
on:
  milestone:
    types: [created]
permissions: write-all
jobs:
  create_issue_on_jira:
    runs-on: ubuntu-latest
    name: opens Jira issue on Github milestone creation
    
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Login
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Create
      id: create
      uses: atlassian/gajira-create@v3
      with:
        project: ES1
        issuetype: Epic
        summary: ${{ github.event.milestone.title }} 
        description: "in ${{ github.repository }} branch ${{ steps.extract_branch.outputs.branch }}\nDescription: ${{ github.event.milestone.description }}"
        
    - name: set Due date
      run: |
        JSON=$(jq -n \
        --arg due_date "${{ github.event.milestone.due_on }}" \
        '{
          "fields": {
            "duedate": $due_date
          }
        }')
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
          -u ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
          -X PUT \
          --data "$JSON" \
          -H "Content-Type: application/json" \
          https://eltakotestinstance.atlassian.net/rest/api/2/issue/${{ steps.create.outputs.issue }})
        if [ $RESPONSE -ne 204 ]; then
          echo "Error: HTTP status code $RESPONSE"
          exit 1
        fi
        
    - name: Log created issue
      run: echo "Epic ${{ steps.create.outputs.issue }} was created"

        
    - name: Update milestone description
      uses: actions/github-script@v6
      with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          script: |       
                const newDescription = `${context.payload.milestone.description}\n---\nAUTOMATICLY GENERATED CONTENT DO NOT EDIT/DELETE BEYOND THIS POINT\n[Issue in Jira](https://eltakotestinstance.atlassian.net/browse/${{ steps.create.outputs.issue }})`;
                await github.rest.issues.updateMilestone({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    milestone_number: context.payload.milestone.number,
                    description: newDescription,
                });
      

