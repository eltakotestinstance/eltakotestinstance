name: create an issue from Jira with a Milestone

on:
    workflow_dispatch:
        inputs:
            issue_key:
                description: 'Jira issue key'
                required: true
            body:
                description: 'Description of the issue'
                required: true
            title:
                description: 'Title of the issue'
                required: true
            epic:
                description: 'Epic issue key'
                required: true
jobs:
    create_issue:
        runs-on: ubuntu-latest
        steps:
            - name: Create issue with milestone
              uses: actions/github-script@v6
              env:
                BODY: ${{ github.event.inputs.body }}
                  
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                    const {BODY} = process.env;
                    const epicKey = '${{ github.event.inputs.epic }}';
                    console.log('Epic Key', epicKey);
                    const milestones = await github.rest.issues.listMilestones({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                    });
                    for (const milestone of milestones.data) {
                        if (milestone.description.includes(epicKey)) {
                            console.log('Found issue Key', epicKey);
                            const issue = await github.rest.issues.create({
                                owner: context.repo.owner,
                                repo: context.repo.repo,
                                title: '${{ github.event.inputs.title }}', 
                                body: BODY,
                                milestone: milestone.number,
                            });
                            if(issue) {
                                const commentBody = '${{ github.event.inputs.issue_key }}'; 
                                await github.rest.issues.createComment({
                                    owner: context.repo.owner,
                                    repo: context.repo.repo,
                                    issue_number: issue.data.number,
                                    body: commentBody,
                                });
                            }
                            
                            break;
                        }
                    }
                    
                    
                    
