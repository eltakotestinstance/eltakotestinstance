on:
    issue_comment:
      types: [created]

jobs:
    new_comment:
      permissions: write-all
      if: ${{ !contains(github.event.comment.body, '*Posted from Jira*') && github.event.comment.user.login != 'github-actions[bot]'}}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v4
          with:
            python-version: '3.9'
            cache: 'pip' # caching pip dependencies
        - name: join all issue comments
          id: join_comments
          run: |
            pip install -r python/requirements.txt;
            OUTPUT=$(python python/issue_join_comments.py);
            echo result=$OUTPUT >> $GITHUB_OUTPUT;
          env:
            ISSUE_NUMBER: ${{ github.event.issue.number }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Check secrets
          id: check_secrets
          run: |
            OUTPUT=$(python python/issue_generate_secrets_api_key_check.py);
            echo result=$OUTPUT >> $GITHUB_OUTPUT;
            echo $OUTPUT;
          env:
            USER_NAME: ${{ github.event.comment.user.login  }}
            GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        - name: run_check_secrets
          id: run_check_secrets
          run: |
            if [[ -z "${{ steps.check_secrets.outputs.result }}"  ]]; then
            echo "JIRA secret for ${{ github.event.comment.user.login }} is not set"
            OUTPUT="${{secrets.JIRA_USER_EMAIL}}"
            else
              echo "JIRA secret for {USER_NAME} is set"
              OUTPUT="${{steps.check_secrets.outputs.result}}"
            fi
        - name: Login
          uses: atlassian/gajira-login@master
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

        - name: Find in comments
          id: extract_issue_key
          uses: atlassian/gajira-find-issue-key@v3
          with:
            string: ${{ steps.join_comments.outputs.result }}
        
        - name: change description in Jira
          if: ${{ steps.extract_issue_key.outputs.issue != '' }}
          run: | 
            python python/issue_post_comment_to_Jira.py;
          env:
              JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
              JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
              JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
              ISSUE_KEY: ${{ steps.extract_issue_key.outputs.issue }}
              COMMENT_TEXT: ${{ github.event.comment.body }}
              USER_NAME: ${{ github.event.comment.user.login }}
              
              
    