name: Update milestone description from Jira

on:
    workflow_dispatch:
        inputs:
            issue_key:
                description: 'Jira issue key'
                required: true
            text:
                description: 'Text'
                required: true

jobs:
    update_description:
        runs-on: ubuntu-latest
        steps:
            - name: Set text as output
              id: set_text
              run: echo "::set-output name=text::${{ github.event.inputs.text }}"
            - name: Update milestone description
              uses: actions/github-script@v6
              with:
                github-token: ${{ secrets.PERSONAL_TOKEN }}
                debug: true
                script: |
                    const issueKey = "${{ github.event.inputs.issue_key }}";
                    let textInput = "${{ steps.set_text.outputs.text }}";
                    let text;

                    try {
                        text = JSON.parse(JSON.stringify(textInput));
                    } catch (error) {
                        console.error('Invalid JSON:', textInput);
                        throw error;
                    }

                                                    
                    const milestones = await github.rest.issues.listMilestones({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    state: 'open',
                    });
                    for (const milestone of milestones.data) {
                        if (milestone.description.includes(issueKey)) {
                            const currentGeneratedSplit = milestone.description.split('AUTOMATICLY GENERATED CONTENT DO NOT EDIT/DELETE BEYOND THIS POINT')[1];
                            const newDescription = `${text}\nAUTOMATICLY GENERATED CONTENT DO NOT EDIT/DELETE BEYOND THIS POINT\n${currentGeneratedSplit}`;
                            await github.rest.issues.updateMilestone({
                                owner: context.repo.owner,
                                repo: context.repo.repo,
                                milestone_number: milestone.number,
                                description: newDescription,
                            });
                            break;
                        }
                    }
