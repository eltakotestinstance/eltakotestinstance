on:
    issue_comment:
      types: [created]

jobs:
    new_comment:
      if: ${{ !contains(github.event.comment.body, '*Posted from Jira*') && github.event.comment.user.login != 'github-actions[bot]'}}
      runs-on: ubuntu-latest
      steps:
        - name: Get issue key
          uses: actions/github-script@v6
          id: get_issue_key
          with:
            github-token: ${{ secrets.PERSONAL_TOKEN }}
            result-encoding: string
            script: |
                const owner = context.repo.owner;
                const repo = context.repo.repo;
                const issue_number = context.issue.number;
                let allComments = "";
                const comments = await github.rest.issues.listComments({
                        owner,
                        repo,
                        issue_number: issue_number,
                });
                const commentBodies = comments.data.map(comment => comment.body);
                allComments += commentBodies.join('\n');
                    
                
                return allComments;
        - name: Login
          uses: atlassian/gajira-login@master
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        - name: Find in comments
          id: extract_issue_key
          uses: atlassian/gajira-find-issue-key@v3
          with:
            string: ${{ steps.get_issue_key.outputs.result }}
        
        - name: Post to Jira
          uses: actions/github-script@v6
          env: 
            COMMENT_TEXT: ${{ github.event.comment.body }}
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            
            script: |
            
                const issueKey = "${{ steps.extract_issue_key.outputs.issue }}";
                const userName = "${{ github.event.comment.user.login }}";
                
                const {COMMENT_TEXT} = process.env;
                const comment = `${userName} posted :\n${COMMENT_TEXT}\n*Posted from GitHub*`;
                
                const jiraUrl = "${{ secrets.JIRA_BASE_URL }}"; 
                const jiraToken = "${{ secrets.JIRA_API_TOKEN }}"; 
                const jiraEmail = "${{ secrets.JIRA_USER_EMAIL }}"; 

                const response = await fetch(`${jiraUrl}/rest/api/3/issue/${issueKey}/comment`, {
                    method: 'POST',
                    headers: {
                        'Authorization': `Basic ${Buffer.from(`${jiraEmail}:${jiraToken}`).toString('base64')}`,
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        body: {
                            "type": "doc",
                            "version": 1,
                            "content": [
                                {
                                    "type": "paragraph",
                                    "content": [
                                        {
                                            "text": comment,
                                            "type": "text"
                                        }
                                    ]
                                }
                            ]
                        }
                    }),
                });
                console.log(await response.text());
                if (!response.ok) {
                    throw new Error(`Failed to post comment to Jira: ${response.statusText}`);
                }
          

    