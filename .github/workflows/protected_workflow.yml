on: #testedit
    workflow_dispatch:
        inputs:
            issue_key:
                description: 'Jira issue key'
                required: true
            body:
                description: 'Description of the issue'
                required: false
            title:
                description: 'Title of the issue'
                required: true

jobs:
    update_issue:
        permissions: write-all
        runs-on: ubuntu-latest
        steps: 
            - name: Update Github Issue
              uses: actions/github-script@v6
              env:
                BODY: ${{ github.event.inputs.body }}
                
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                    const issueKey = '${{ github.event.inputs.issue_key }}';
                    const {BODY} = process.env;
                    const title = '${{ github.event.inputs.title }}';
                    const owner = context.repo.owner;
                    const repo = context.repo.repo;
                    const pulls = await github.rest.pulls.list({
                        owner,
                        repo,
                        state: 'all',
                    });

                    let pullNumber;

                    for (const pull of pull.data) {
                        const comments = await github.rest.issues.listComments({
                            owner,
                            repo,
                            issue_number: pull.number,
                        });

                        const commentWithKey = comments.data.find(comment => comment.body.includes(issueKey));

                        if (commentWithKey) {
                            pullNumber = pull.number;
                            break;
                        }
                    }
                    if(pullNumber){
                        await github.rest.pulls.update({
                            owner,
                            repo,
                            pull_number: pullNumber,
                            title,
                            body: `${BODY}[skip]`,
                        });
                    }
                    else {
                        console.log('Issue not found');
                    }


